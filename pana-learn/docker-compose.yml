version: '3.8'

services:
  # Aplicação ERA Learn
  eralearn:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eralearn-app
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
    volumes:
      - ./logs:/var/log/nginx
    networks:
      - eralearn-network

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: eralearn-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs:/var/log/nginx
    depends_on:
      - eralearn
    networks:
      - eralearn-network

  # Redis para cache (opcional)
  redis:
    image: redis:alpine
    container_name: eralearn-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - eralearn-network

  # Monitoramento com Prometheus (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: eralearn-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - eralearn-network

  # Grafana para visualização (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: eralearn-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - eralearn-network

volumes:
  redis-data:
  prometheus-data:
  grafana-data:

networks:
  eralearn-network:
    driver: bridge
