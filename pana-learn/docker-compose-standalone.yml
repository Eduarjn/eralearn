# ðŸš€ ERA Learn - Docker Compose Standalone
# Plataforma 100% autÃ´noma sem dependÃªncias externas

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: eralearn-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: eralearn
      POSTGRES_USER: eralearn
      POSTGRES_PASSWORD: eralearn2024!
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    networks:
      - eralearn-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U eralearn -d eralearn"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: eralearn-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eralearn-network
    command: redis-server --appendonly yes --requirepass "eralearn2024!"

  # Backend API Server
  backend:
    build:
      context: ./backend-local
      dockerfile: Dockerfile
    container_name: eralearn-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://eralearn:eralearn2024!@postgres:5432/eralearn
      - REDIS_URL=redis://:eralearn2024!@redis:6379
      - JWT_SECRET=era_learn_super_secret_jwt_key_2024!
      - UPLOAD_DIR=/uploads
      - MAX_FILE_SIZE=2048MB
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - uploads_data:/uploads
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - eralearn-network

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.standalone
    container_name: eralearn-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:3001
      - VITE_APP_MODE=standalone
    volumes:
      - ./logs:/var/log/nginx
    depends_on:
      - backend
    networks:
      - eralearn-network

  # File Storage Server
  storage:
    image: minio/minio:latest
    container_name: eralearn-storage
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: eralearn
      MINIO_ROOT_PASSWORD: eralearn2024!
    volumes:
      - storage_data:/data
    networks:
      - eralearn-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: eralearn-backup
    restart: "no"
    environment:
      PGPASSWORD: eralearn2024!
    volumes:
      - ./database/backups:/backups
      - ./scripts:/scripts
    networks:
      - eralearn-network
    profiles:
      - backup
    command: |
      sh -c "
        echo 'Criando backup automÃ¡tico...'
        pg_dump -h postgres -U eralearn -d eralearn > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
        echo 'Backup criado com sucesso!'
      "

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  storage_data:
    driver: local

networks:
  eralearn-network:
    driver: bridge


















